// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.6
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning


namespace DbContextPOCO.Entity
{

    using System.Linq;

    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.32.0.0")]
    public class FakeEShopEntities : IEShopEntities
    {
        public System.Data.Entity.DbSet<Advertisement> Advertisements { get; set; }
        public System.Data.Entity.DbSet<Category> Categories { get; set; }
        public System.Data.Entity.DbSet<Contact> Contacts { get; set; }
        public System.Data.Entity.DbSet<Menu> Menus { get; set; }
        public System.Data.Entity.DbSet<OrderDetail> OrderDetails { get; set; }
        public System.Data.Entity.DbSet<OrderMaster> OrderMasters { get; set; }
        public System.Data.Entity.DbSet<PageSetting> PageSettings { get; set; }
        public System.Data.Entity.DbSet<Product> Products { get; set; }
        public System.Data.Entity.DbSet<Promotion> Promotions { get; set; }
        public System.Data.Entity.DbSet<SysFunction> SysFunctions { get; set; }
        public System.Data.Entity.DbSet<SysFunctionGroup> SysFunctionGroups { get; set; }
        public System.Data.Entity.DbSet<SysFunctionInGroup> SysFunctionInGroups { get; set; }
        public System.Data.Entity.DbSet<SysGroupRole> SysGroupRoles { get; set; }
        public System.Data.Entity.DbSet<SysUserInGroup> SysUserInGroups { get; set; }
        public System.Data.Entity.DbSet<UserProfile> UserProfiles { get; set; }

        public FakeEShopEntities()
        {
            Advertisements = new FakeDbSet<Advertisement>("AdvertisementId");
            Categories = new FakeDbSet<Category>("CategoryId");
            Contacts = new FakeDbSet<Contact>("ContactId");
            Menus = new FakeDbSet<Menu>("MenuId");
            OrderDetails = new FakeDbSet<OrderDetail>("OrderDetailId");
            OrderMasters = new FakeDbSet<OrderMaster>("OrderMasterId");
            PageSettings = new FakeDbSet<PageSetting>("PageSettingId");
            Products = new FakeDbSet<Product>("ProductId");
            Promotions = new FakeDbSet<Promotion>("PromotionId");
            SysFunctions = new FakeDbSet<SysFunction>("FunctionId");
            SysFunctionGroups = new FakeDbSet<SysFunctionGroup>("SysFunctionGroupId");
            SysFunctionInGroups = new FakeDbSet<SysFunctionInGroup>("SysFunctionInGroupId");
            SysGroupRoles = new FakeDbSet<SysGroupRole>("GroupRolesId");
            SysUserInGroups = new FakeDbSet<SysUserInGroup>("SysUserInGroupId");
            UserProfiles = new FakeDbSet<UserProfile>("UserProfileId");
        }

        public int SaveChangesCount { get; private set; }
        public int SaveChanges()
        {
            ++SaveChangesCount;
            return 1;
        }

        public System.Threading.Tasks.Task<int> SaveChangesAsync()
        {
            ++SaveChangesCount;
            return System.Threading.Tasks.Task<int>.Factory.StartNew(() => 1);
        }

        public System.Threading.Tasks.Task<int> SaveChangesAsync(System.Threading.CancellationToken cancellationToken)
        {
            ++SaveChangesCount;
            return System.Threading.Tasks.Task<int>.Factory.StartNew(() => 1, cancellationToken);
        }

        protected virtual void Dispose(bool disposing)
        {
        }

        public void Dispose()
        {
            Dispose(true);
        }

        public System.Data.Entity.Infrastructure.DbChangeTracker _changeTracker;
        public System.Data.Entity.Infrastructure.DbChangeTracker ChangeTracker { get { return _changeTracker; } }
        public System.Data.Entity.Infrastructure.DbContextConfiguration _configuration;
        public System.Data.Entity.Infrastructure.DbContextConfiguration Configuration { get { return _configuration; } }
        public System.Data.Entity.Database _database;
        public System.Data.Entity.Database Database { get { return _database; } }
        public System.Data.Entity.Infrastructure.DbEntityEntry<TEntity> Entry<TEntity>(TEntity entity) where TEntity : class
        {
            throw new System.NotImplementedException();
        }
        public System.Data.Entity.Infrastructure.DbEntityEntry Entry(object entity)
        {
            throw new System.NotImplementedException();
        }
        public System.Collections.Generic.IEnumerable<System.Data.Entity.Validation.DbEntityValidationResult> GetValidationErrors()
        {
            throw new System.NotImplementedException();
        }
        public System.Data.Entity.DbSet Set(System.Type entityType)
        {
            throw new System.NotImplementedException();
        }
        public System.Data.Entity.DbSet<TEntity> Set<TEntity>() where TEntity : class
        {
            throw new System.NotImplementedException();
        }
        public override string ToString()
        {
            throw new System.NotImplementedException();
        }

    }
}
// </auto-generated>
