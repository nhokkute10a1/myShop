// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.6
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning


namespace DbContextPOCO.Entity
{

    // OrderDetail
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.32.0.0")]
    public class OrderDetailConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<OrderDetail>
    {
        public OrderDetailConfiguration()
            : this("dbo")
        {
        }

        public OrderDetailConfiguration(string schema)
        {
            ToTable("OrderDetail", schema);
            HasKey(x => x.OrderDetailId);

            Property(x => x.OrderDetailId).HasColumnName(@"OrderDetail_ID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.OrderMasterId).HasColumnName(@"OrderMaster_ID").HasColumnType("int").IsRequired();
            Property(x => x.ProductId).HasColumnName(@"Product_ID").HasColumnType("int").IsRequired();
            Property(x => x.Quanlity).HasColumnName(@"Quanlity").HasColumnType("int").IsRequired();
            Property(x => x.Amout).HasColumnName(@"Amout").HasColumnType("float").IsRequired();
            Property(x => x.OrderDetailDate).HasColumnName(@"OrderDetail_Date").HasColumnType("datetime").IsRequired();
            Property(x => x.OrderDetailStatus).HasColumnName(@"OrderDetail_Status").HasColumnType("int").IsOptional();
            Property(x => x.Lock).HasColumnName(@"Lock").HasColumnType("int").IsOptional();
            Property(x => x.IsActive).HasColumnName(@"Is_Active").HasColumnType("bit").IsOptional();

            // Foreign keys
            HasRequired(a => a.OrderMaster).WithMany(b => b.OrderDetails).HasForeignKey(c => c.OrderMasterId).WillCascadeOnDelete(false); // FK_OrderDetail_OrderMaster
            HasRequired(a => a.Product).WithMany(b => b.OrderDetails).HasForeignKey(c => c.ProductId).WillCascadeOnDelete(false); // FK_OrderDetail_Product
        }
    }

}
// </auto-generated>
