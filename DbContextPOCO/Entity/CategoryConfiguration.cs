// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.6
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning


namespace DbContextPOCO.Entity
{

    // Category
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.32.0.0")]
    public class CategoryConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Category>
    {
        public CategoryConfiguration()
            : this("dbo")
        {
        }

        public CategoryConfiguration(string schema)
        {
            ToTable("Category", schema);
            HasKey(x => x.CategoryId);

            Property(x => x.CategoryId).HasColumnName(@"Category_ID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.CategoryParentId).HasColumnName(@"Category_Parent_ID").HasColumnType("int").IsRequired();
            Property(x => x.CategoryNameVn).HasColumnName(@"Category_NameVN").HasColumnType("nvarchar").IsRequired().HasMaxLength(50);
            Property(x => x.CategoryNameEn).HasColumnName(@"Category_NameEN").HasColumnType("nvarchar").IsRequired().HasMaxLength(50);
            Property(x => x.CategoryUrlOut).HasColumnName(@"Category_UrlOut").HasColumnType("nvarchar").IsOptional().HasMaxLength(255);
            Property(x => x.CategoryRewrite).HasColumnName(@"Category_Rewrite").HasColumnType("nvarchar").IsRequired().HasMaxLength(255);
            Property(x => x.CategorySearchVn).HasColumnName(@"Category_SearchVN").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(50);
            Property(x => x.CategorySearchEn).HasColumnName(@"Category_SearchEN").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(50);
            Property(x => x.CategoryIcon).HasColumnName(@"Category_Icon").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(255);
            Property(x => x.CategoryImg).HasColumnName(@"Category_Img").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(255);
            Property(x => x.KeywordTitile).HasColumnName(@"Keyword_Titile").HasColumnType("nvarchar").IsOptional().HasMaxLength(50);
            Property(x => x.KeywordContent).HasColumnName(@"Keyword_Content").HasColumnType("nvarchar(max)").IsOptional();
            Property(x => x.KeywordDescription).HasColumnName(@"Keyword_Description").HasColumnType("nvarchar(max)").IsOptional();
            Property(x => x.CreateDate).HasColumnName(@"CreateDate").HasColumnType("datetime").IsOptional();
            Property(x => x.CreateBy).HasColumnName(@"CreateBy").HasColumnType("int").IsOptional();
            Property(x => x.UpdateDate).HasColumnName(@"UpdateDate").HasColumnType("datetime").IsOptional();
            Property(x => x.UpdateBy).HasColumnName(@"UpdateBy").HasColumnType("int").IsOptional();
            Property(x => x.Lock).HasColumnName(@"Lock").HasColumnType("int").IsOptional();
            Property(x => x.IsActive).HasColumnName(@"Is_Active").HasColumnType("bit").IsOptional();
            Property(x => x.IsHomePage).HasColumnName(@"Is_HomePage").HasColumnType("bit").IsOptional();
            Property(x => x.IsTopMenu).HasColumnName(@"Is_TopMenu").HasColumnType("bit").IsOptional();
            Property(x => x.IsBottomMenu).HasColumnName(@"Is_BottomMenu").HasColumnType("bit").IsOptional();
            Property(x => x.DisplayOrder).HasColumnName(@"Display_Order").HasColumnType("int").IsOptional();
        }
    }

}
// </auto-generated>
