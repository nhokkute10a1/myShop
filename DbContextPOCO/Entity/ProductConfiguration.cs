// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.6
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning


namespace DbContextPOCO.Entity
{

    // Product
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.32.0.0")]
    public class ProductConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Product>
    {
        public ProductConfiguration()
            : this("dbo")
        {
        }

        public ProductConfiguration(string schema)
        {
            ToTable("Product", schema);
            HasKey(x => x.ProductId);

            Property(x => x.ProductId).HasColumnName(@"Product_ID").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.ProductCode).HasColumnName(@"Product_Code").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(50);
            Property(x => x.CategoryParentId).HasColumnName(@"Category_Parent_ID").HasColumnType("int").IsRequired();
            Property(x => x.CurrencyId).HasColumnName(@"Currency_ID").HasColumnType("int").IsOptional();
            Property(x => x.ProductNameVn).HasColumnName(@"Product_NameVN").HasColumnType("nvarchar").IsRequired().HasMaxLength(50);
            Property(x => x.ProductNameEn).HasColumnName(@"Product_NameEN").HasColumnType("nvarchar").IsRequired().HasMaxLength(50);
            Property(x => x.ProductUrlOut).HasColumnName(@"Product_UrlOut").HasColumnType("nvarchar").IsOptional().HasMaxLength(255);
            Property(x => x.ProductRewrite).HasColumnName(@"Product_Rewrite").HasColumnType("nvarchar").IsOptional().HasMaxLength(255);
            Property(x => x.ProductSearchVn).HasColumnName(@"Product_SearchVN").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(50);
            Property(x => x.ProductSearchEn).HasColumnName(@"Product_SearchEN").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(50);
            Property(x => x.ProductContentVn).HasColumnName(@"Product_ContentVN").HasColumnType("nvarchar(max)").IsOptional();
            Property(x => x.ProductContentEn).HasColumnName(@"Product_ContentEN").HasColumnType("nvarchar(max)").IsOptional();
            Property(x => x.ProductDescriptionVn).HasColumnName(@"Product_DescriptionVN").HasColumnType("nvarchar(max)").IsOptional();
            Property(x => x.ProductDescriptionEn).HasColumnName(@"Product_DescriptionEN").HasColumnType("nvarchar(max)").IsOptional();
            Property(x => x.ProductPrice).HasColumnName(@"Product_Price").HasColumnType("float").IsOptional();
            Property(x => x.ProductDiscount).HasColumnName(@"Product_Discount").HasColumnType("float").IsOptional();
            Property(x => x.ProductImg).HasColumnName(@"Product_Img").HasColumnType("varchar(max)").IsOptional().IsUnicode(false);
            Property(x => x.ImgWidth).HasColumnName(@"Img_Width").HasColumnType("int").IsOptional();
            Property(x => x.ImgUnitWidth).HasColumnName(@"Img_Unit_Width").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(10);
            Property(x => x.ImgHeight).HasColumnName(@"Img_Height").HasColumnType("int").IsOptional();
            Property(x => x.ImgUnitHeight).HasColumnName(@"Img_Unit_Height").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(10);
            Property(x => x.KeywordTitile).HasColumnName(@"Keyword_Titile").HasColumnType("nvarchar").IsOptional().HasMaxLength(50);
            Property(x => x.KeywordContent).HasColumnName(@"Keyword_Content").HasColumnType("nvarchar(max)").IsOptional();
            Property(x => x.KeywordDescription).HasColumnName(@"Keyword_Description").HasColumnType("nvarchar(max)").IsOptional();
            Property(x => x.CreateDate).HasColumnName(@"CreateDate").HasColumnType("datetime").IsOptional();
            Property(x => x.CreateBy).HasColumnName(@"CreateBy").HasColumnType("int").IsOptional();
            Property(x => x.UpdateDate).HasColumnName(@"UpdateDate").HasColumnType("datetime").IsOptional();
            Property(x => x.UpdateBy).HasColumnName(@"UpdateBy").HasColumnType("int").IsOptional();
            Property(x => x.ProductView).HasColumnName(@"Product_View").HasColumnType("int").IsOptional();
            Property(x => x.Lock).HasColumnName(@"Lock").HasColumnType("int").IsOptional();
            Property(x => x.IsActive).HasColumnName(@"Is_Active").HasColumnType("bit").IsOptional();
            Property(x => x.IsHomePage).HasColumnName(@"Is_HomePage").HasColumnType("bit").IsOptional();
            Property(x => x.IsTopMenu).HasColumnName(@"Is_TopMenu").HasColumnType("bit").IsOptional();
            Property(x => x.IsBottomMenu).HasColumnName(@"Is_BottomMenu").HasColumnType("bit").IsOptional();
            Property(x => x.DisplayOrder).HasColumnName(@"Display_Order").HasColumnType("int").IsOptional();

            // Foreign keys
            HasRequired(a => a.Category).WithMany(b => b.Products).HasForeignKey(c => c.CategoryParentId).WillCascadeOnDelete(false); // FK_Product_Category
        }
    }

}
// </auto-generated>
